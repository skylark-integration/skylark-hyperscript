{"version":3,"sources":["skylark-tangular.js"],"names":[],"mappingsfile":"../skylark-tangular.js","sourcesContent":["define('skylark-tangular/hyperscript',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.hyperscript = {};\r\n});\ndefine('skylark-tangular/h',[\r\n\t\"skylark-langx/types\",\r\n\t\"skylark-langx/arrays\",\r\n\t\"skylark-langx/hoster\",\r\n\t\"./hyperscript\"\r\n],function(types, arrays,hoster, hyperscript){\r\n\tvar isArray = types.isArray,\r\n\t\tisNode = types.isHtmlNode,\r\n\t\tforEach = arrays.forEach,\t\r\n\t\tdocument = hoster.document,\r\n\t\tText = w.Text,\r\n\t\tsplit = function(s,arg) {\r\n\t\t\treturn s.split(arg);\r\n\t\t},\r\n\t\taddClass = function(el,cls) {\r\n\t\t\tel.classList.add(cls);\r\n\t\t};\r\n\r\n\tfunction context () {\r\n\r\n\t  var cleanupFuncs = []\r\n\r\n\t  function h() {\r\n\t    var args = [].slice.call(arguments), e = null\r\n\t    function item (l) {\r\n\t      var r\r\n\t      function parseClass (string) {\r\n\r\n\t        var m = split(string, /([\\.#]?[^\\s#.]+)/)\r\n\t        if(/^\\.|#/.test(m[1])) {\r\n\t          e = document.createElement('div');\r\n\t        }\r\n\t        forEach(m, function (v) {\r\n\t          var s = v.substring(1,v.length);\r\n\t          if(!v) {\r\n\t          \treturn ;\r\n\t          }\r\n\t          if(!e) {\r\n\t            e = document.createElement(v);\r\n\t          } else if (v[0] === '.') {\r\n\t            addClass(e,s);\r\n\t          } else if (v[0] === '#') {\r\n\t            e.setAttribute('id', s);\r\n\t          }\r\n\t        })\r\n\t      }\r\n\r\n\t      if(l == null) {\r\n\t        ;\r\n\t      } else if('string' === typeof l) {\r\n\t        if(!e) {\r\n\t          parseClass(l)\r\n\t        } else {\r\n\t          e.appendChild(r = document.createTextNode(l))\r\n\t        }\r\n\t      } else if('number' === typeof l\r\n\t        || 'boolean' === typeof l\r\n\t        || l instanceof Date\r\n\t        || l instanceof RegExp ) {\r\n\t          e.appendChild(r = document.createTextNode(l.toString()))\r\n\t      } else if (isArray(l)) {\r\n\t        forEach(l, item) ;\r\n\t      } else if(isNode(l)) {\r\n\t        e.appendChild(r = l)\r\n\t      } else if(l instanceof Text) {\r\n\t        e.appendChild(r = l)\r\n\t      } else if ('object' === typeof l) {\r\n\t        for (var k in l) {\r\n\t          if('function' === typeof l[k]) {\r\n\t            if(/^on\\w+/.test(k)) {\r\n\t              (function (k, l) { // capture k, l in the closure\r\n\t                if (e.addEventListener){\r\n\t                  e.addEventListener(k.substring(2), l[k], false)\r\n\t                  cleanupFuncs.push(function(){\r\n\t                    e.removeEventListener(k.substring(2), l[k], false)\r\n\t                  })\r\n\t                }else{\r\n\t                  e.attachEvent(k, l[k])\r\n\t                  cleanupFuncs.push(function(){\r\n\t                    e.detachEvent(k, l[k])\r\n\t                  })\r\n\t                }\r\n\t              })(k, l)\r\n\t            } else {\r\n\t              // observable\r\n\t              e[k] = l[k]()\r\n\t              cleanupFuncs.push(l[k](function (v) {\r\n\t                e[k] = v\r\n\t              }))\r\n\t            }\r\n\t          }\r\n\t          else if(k === 'style') {\r\n\t            if('string' === typeof l[k]) {\r\n\t              e.style.cssText = l[k]\r\n\t            }else{\r\n\t              for (var s in l[k]) (function(s, v) {\r\n\t                if('function' === typeof v) {\r\n\t                  // observable\r\n\t                  e.style.setProperty(s, v())\r\n\t                  cleanupFuncs.push(v(function (val) {\r\n\t                    e.style.setProperty(s, val)\r\n\t                  }))\r\n\t                } else\r\n\t                  var match = l[k][s].match(/(.*)\\W+!important\\W*$/);\r\n\t                  if (match) {\r\n\t                    e.style.setProperty(s, match[1], 'important')\r\n\t                  } else {\r\n\t                    e.style.setProperty(s, l[k][s])\r\n\t                  }\r\n\t              })(s, l[k][s])\r\n\t            }\r\n\t          } else if(k === 'attrs') {\r\n\t            for (var v in l[k]) {\r\n\t              e.setAttribute(v, l[k][v])\r\n\t            }\r\n\t          } else if (k.substr(0, 5) === \"data-\") {\r\n\t            e.setAttribute(k, l[k])\r\n\t          } else {\r\n\t            e[k] = l[k]\r\n\t          }\r\n\t        }\r\n\t      } else if ('function' === typeof l) {\r\n\t        //assume it's an observable!\r\n\t        var v = l()\r\n\t        e.appendChild(r = isNode(v) ? v : document.createTextNode(v))\r\n\r\n\t        cleanupFuncs.push(l(function (v) {\r\n\t          if(isNode(v) && r.parentElement) {\r\n\t            r.parentElement.replaceChild(v, r), r = v\r\n\t          } else {\r\n\t            r.textContent = v ;\r\n\t          }\r\n\t        }))\r\n\t      }\r\n\r\n\t      return r\r\n\t    }\r\n\t    while(args.length) {\r\n\t      item(args.shift())\r\n\t    }\r\n\r\n\t    return e\r\n\t  }\r\n\r\n\t  h.cleanup = function () {\r\n\t    for (var i = 0; i < cleanupFuncs.length; i++){\r\n\t      cleanupFuncs[i]()\r\n\t    }\r\n\t    cleanupFuncs.length = 0\r\n\t  }\r\n\r\n\t  return h\r\n\t}\r\n\r\n\tvar h =  context() ;\r\n\th.context = context ;\r\n\r\n\treturn hyperscript.h = h;\r\n\r\n});\ndefine('skylark-tangular/tags',[\r\n\t\"./hyperscript\",\r\n\t\"./h\"\r\n],function(hyperscript, h) {\r\n\r\n\tfunction isValidString(param) {\r\n\t    return typeof param === 'string' && param.length > 0;\r\n\t}\r\n\tfunction isSelector(param) {\r\n\t    return isValidString(param) && (param[0] === '.' || param[0] === '#');\r\n\t}\r\n\r\n\tfunction createTagFunction(tagName) {\r\n\t    return function hyperscript(a, b, c) {\r\n\t        var hasA = typeof a !== 'undefined';\r\n\t        var hasB = typeof b !== 'undefined';\r\n\t        var hasC = typeof c !== 'undefined';\r\n\t        if (isSelector(a)) {\r\n\t            if (hasB && hasC) {\r\n\t                return h(tagName + a, b, c);\r\n\t            }\r\n\t            else if (hasB) {\r\n\t                return h(tagName + a, b);\r\n\t            }\r\n\t            else {\r\n\t                return h(tagName + a, {});\r\n\t            }\r\n\t        }\r\n\t        else if (hasC) {\r\n\t            return h(tagName + a, b, c);\r\n\t        }\r\n\t        else if (hasB) {\r\n\t            return h(tagName, a, b);\r\n\t        }\r\n\t        else if (hasA) {\r\n\t            return h(tagName, a);\r\n\t        }\r\n\t        else {\r\n\t            return h(tagName, {});\r\n\t        }\r\n\t    };\r\n\t}\r\n\tvar SVG_TAG_NAMES = [\r\n\t    'a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor',\r\n\t    'animateMotion', 'animateTransform', 'circle', 'clipPath', 'colorProfile',\r\n\t    'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix',\r\n\t    'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\r\n\t    'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB',\r\n\t    'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode',\r\n\t    'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting',\r\n\t    'feSpotlight', 'feTile', 'feTurbulence', 'filter', 'font', 'fontFace',\r\n\t    'fontFaceFormat', 'fontFaceName', 'fontFaceSrc', 'fontFaceUri',\r\n\t    'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image', 'line',\r\n\t    'linearGradient', 'marker', 'mask', 'metadata', 'missingGlyph', 'mpath',\r\n\t    'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script',\r\n\t    'set', 'stop', 'style', 'switch', 'symbol', 'text', 'textPath', 'title',\r\n\t    'tref', 'tspan', 'use', 'view', 'vkern',\r\n\t];\r\n\tvar svg = createTagFunction('svg');\r\n\tSVG_TAG_NAMES.forEach(function (tag) {\r\n\t    svg[tag] = createTagFunction(tag);\r\n\t});\r\n\tvar TAG_NAMES = [\r\n\t    'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base',\r\n\t    'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption',\r\n\t    'cite', 'code', 'col', 'colgroup', 'dd', 'del', 'dfn', 'dir', 'div', 'dl',\r\n\t    'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form',\r\n\t    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n\t    'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend',\r\n\t    'li', 'link', 'main', 'map', 'mark', 'menu', 'meta', 'nav', 'noscript',\r\n\t    'object', 'ol', 'optgroup', 'option', 'p', 'param', 'pre', 'progress', 'q',\r\n\t    'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small',\r\n\t    'source', 'span', 'strong', 'style', 'sub', 'sup', 'table', 'tbody', 'td',\r\n\t    'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'u', 'ul', 'video',\r\n\t];\r\n\tvar tags = { \r\n\t\tSVG_TAG_NAMES: SVG_TAG_NAMES, \r\n\t\tTAG_NAMES: TAG_NAMES, \r\n\t\tsvg: svg, \r\n\t\tisSelector: isSelector, \r\n\t\tcreateTagFunction: createTagFunction \r\n\t};\r\n\tTAG_NAMES.forEach(function (n) {\r\n\t    tags[n] = createTagFunction(n);\r\n\t});\r\n\r\n\treturn  hyperscript.tags = tags;\r\n});\ndefine('skylark-tangular/main',[\r\n\t\"./h\",\r\n\t\"./tags\"\r\n],function(h){\r\n\treturn h;\r\n});\ndefine('skylark-tangular', ['skylark-tangular/main'], function (main) { return main; });\n\n"]}