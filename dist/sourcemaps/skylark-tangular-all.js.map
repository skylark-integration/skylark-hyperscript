{"version":3,"sources":["skylark-tangular-all.js"],"names":["define","class2type","toString","type","split","forEach","name","toLowerCase","obj","String","call","isEmptyObject","isFunction","value","isHtmlNode","Node","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","length","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmpty","isNull","isNumber","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","i","item","j","push","baseIndexOf","compact","first","items","n","slice","inArray","indexOf","makeArray","offset","startWith","concat","map","elements","callback","key","values","uniq","idx","hoster","isBrowser","isNode","global","this","browser","node","process","versions","v8","self","_document","defineProperty","w","require","document","skylark","hyperscript","arrays","Text","s","arg","addClass","el","cls","classList","add","context","cleanupFuncs","h","args","arguments","e","l","r","appendChild","createTextNode","string","m","test","createElement","v","substring","setAttribute","parseClass","Date","RegExp","k","addEventListener","removeEventListener","attachEvent","detachEvent","style","cssText","setProperty","val","match","substr","parentElement","replaceChild","textContent","shift","cleanup","isSelector","param","isValidString","createTagFunction","tagName","a","b","c","hasA","hasB","hasC","SVG_TAG_NAMES","svg","tag","TAG_NAMES","tags","main"],"mappings":"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","file":"../skylark-tangular-all.js","sourcesContent":["define('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-tangular/hyperscript',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.hyperscript = {};\r\n});\ndefine('skylark-tangular/h',[\r\n\t\"skylark-langx/types\",\r\n\t\"skylark-langx/arrays\",\r\n\t\"skylark-langx/hoster\",\r\n\t\"./hyperscript\"\r\n],function(types, arrays,hoster, hyperscript){\r\n\tvar isArray = types.isArray,\r\n\t\tisNode = types.isHtmlNode,\r\n\t\tforEach = arrays.forEach,\t\r\n\t\tdocument = hoster.document,\r\n\t\tText = w.Text,\r\n\t\tsplit = function(s,arg) {\r\n\t\t\treturn s.split(arg);\r\n\t\t},\r\n\t\taddClass = function(el,cls) {\r\n\t\t\tel.classList.add(cls);\r\n\t\t};\r\n\r\n\tfunction context () {\r\n\r\n\t  var cleanupFuncs = []\r\n\r\n\t  function h() {\r\n\t    var args = [].slice.call(arguments), e = null\r\n\t    function item (l) {\r\n\t      var r\r\n\t      function parseClass (string) {\r\n\r\n\t        var m = split(string, /([\\.#]?[^\\s#.]+)/)\r\n\t        if(/^\\.|#/.test(m[1])) {\r\n\t          e = document.createElement('div');\r\n\t        }\r\n\t        forEach(m, function (v) {\r\n\t          var s = v.substring(1,v.length);\r\n\t          if(!v) {\r\n\t          \treturn ;\r\n\t          }\r\n\t          if(!e) {\r\n\t            e = document.createElement(v);\r\n\t          } else if (v[0] === '.') {\r\n\t            addClass(e,s);\r\n\t          } else if (v[0] === '#') {\r\n\t            e.setAttribute('id', s);\r\n\t          }\r\n\t        })\r\n\t      }\r\n\r\n\t      if(l == null) {\r\n\t        ;\r\n\t      } else if('string' === typeof l) {\r\n\t        if(!e) {\r\n\t          parseClass(l)\r\n\t        } else {\r\n\t          e.appendChild(r = document.createTextNode(l))\r\n\t        }\r\n\t      } else if('number' === typeof l\r\n\t        || 'boolean' === typeof l\r\n\t        || l instanceof Date\r\n\t        || l instanceof RegExp ) {\r\n\t          e.appendChild(r = document.createTextNode(l.toString()))\r\n\t      } else if (isArray(l)) {\r\n\t        forEach(l, item) ;\r\n\t      } else if(isNode(l)) {\r\n\t        e.appendChild(r = l)\r\n\t      } else if(l instanceof Text) {\r\n\t        e.appendChild(r = l)\r\n\t      } else if ('object' === typeof l) {\r\n\t        for (var k in l) {\r\n\t          if('function' === typeof l[k]) {\r\n\t            if(/^on\\w+/.test(k)) {\r\n\t              (function (k, l) { // capture k, l in the closure\r\n\t                if (e.addEventListener){\r\n\t                  e.addEventListener(k.substring(2), l[k], false)\r\n\t                  cleanupFuncs.push(function(){\r\n\t                    e.removeEventListener(k.substring(2), l[k], false)\r\n\t                  })\r\n\t                }else{\r\n\t                  e.attachEvent(k, l[k])\r\n\t                  cleanupFuncs.push(function(){\r\n\t                    e.detachEvent(k, l[k])\r\n\t                  })\r\n\t                }\r\n\t              })(k, l)\r\n\t            } else {\r\n\t              // observable\r\n\t              e[k] = l[k]()\r\n\t              cleanupFuncs.push(l[k](function (v) {\r\n\t                e[k] = v\r\n\t              }))\r\n\t            }\r\n\t          }\r\n\t          else if(k === 'style') {\r\n\t            if('string' === typeof l[k]) {\r\n\t              e.style.cssText = l[k]\r\n\t            }else{\r\n\t              for (var s in l[k]) (function(s, v) {\r\n\t                if('function' === typeof v) {\r\n\t                  // observable\r\n\t                  e.style.setProperty(s, v())\r\n\t                  cleanupFuncs.push(v(function (val) {\r\n\t                    e.style.setProperty(s, val)\r\n\t                  }))\r\n\t                } else\r\n\t                  var match = l[k][s].match(/(.*)\\W+!important\\W*$/);\r\n\t                  if (match) {\r\n\t                    e.style.setProperty(s, match[1], 'important')\r\n\t                  } else {\r\n\t                    e.style.setProperty(s, l[k][s])\r\n\t                  }\r\n\t              })(s, l[k][s])\r\n\t            }\r\n\t          } else if(k === 'attrs') {\r\n\t            for (var v in l[k]) {\r\n\t              e.setAttribute(v, l[k][v])\r\n\t            }\r\n\t          } else if (k.substr(0, 5) === \"data-\") {\r\n\t            e.setAttribute(k, l[k])\r\n\t          } else {\r\n\t            e[k] = l[k]\r\n\t          }\r\n\t        }\r\n\t      } else if ('function' === typeof l) {\r\n\t        //assume it's an observable!\r\n\t        var v = l()\r\n\t        e.appendChild(r = isNode(v) ? v : document.createTextNode(v))\r\n\r\n\t        cleanupFuncs.push(l(function (v) {\r\n\t          if(isNode(v) && r.parentElement) {\r\n\t            r.parentElement.replaceChild(v, r), r = v\r\n\t          } else {\r\n\t            r.textContent = v ;\r\n\t          }\r\n\t        }))\r\n\t      }\r\n\r\n\t      return r\r\n\t    }\r\n\t    while(args.length) {\r\n\t      item(args.shift())\r\n\t    }\r\n\r\n\t    return e\r\n\t  }\r\n\r\n\t  h.cleanup = function () {\r\n\t    for (var i = 0; i < cleanupFuncs.length; i++){\r\n\t      cleanupFuncs[i]()\r\n\t    }\r\n\t    cleanupFuncs.length = 0\r\n\t  }\r\n\r\n\t  return h\r\n\t}\r\n\r\n\tvar h =  context() ;\r\n\th.context = context ;\r\n\r\n\treturn hyperscript.h = h;\r\n\r\n});\ndefine('skylark-tangular/tags',[\r\n\t\"./hyperscript\",\r\n\t\"./h\"\r\n],function(hyperscript, h) {\r\n\r\n\tfunction isValidString(param) {\r\n\t    return typeof param === 'string' && param.length > 0;\r\n\t}\r\n\tfunction isSelector(param) {\r\n\t    return isValidString(param) && (param[0] === '.' || param[0] === '#');\r\n\t}\r\n\r\n\tfunction createTagFunction(tagName) {\r\n\t    return function hyperscript(a, b, c) {\r\n\t        var hasA = typeof a !== 'undefined';\r\n\t        var hasB = typeof b !== 'undefined';\r\n\t        var hasC = typeof c !== 'undefined';\r\n\t        if (isSelector(a)) {\r\n\t            if (hasB && hasC) {\r\n\t                return h(tagName + a, b, c);\r\n\t            }\r\n\t            else if (hasB) {\r\n\t                return h(tagName + a, b);\r\n\t            }\r\n\t            else {\r\n\t                return h(tagName + a, {});\r\n\t            }\r\n\t        }\r\n\t        else if (hasC) {\r\n\t            return h(tagName + a, b, c);\r\n\t        }\r\n\t        else if (hasB) {\r\n\t            return h(tagName, a, b);\r\n\t        }\r\n\t        else if (hasA) {\r\n\t            return h(tagName, a);\r\n\t        }\r\n\t        else {\r\n\t            return h(tagName, {});\r\n\t        }\r\n\t    };\r\n\t}\r\n\tvar SVG_TAG_NAMES = [\r\n\t    'a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor',\r\n\t    'animateMotion', 'animateTransform', 'circle', 'clipPath', 'colorProfile',\r\n\t    'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix',\r\n\t    'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\r\n\t    'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB',\r\n\t    'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode',\r\n\t    'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting',\r\n\t    'feSpotlight', 'feTile', 'feTurbulence', 'filter', 'font', 'fontFace',\r\n\t    'fontFaceFormat', 'fontFaceName', 'fontFaceSrc', 'fontFaceUri',\r\n\t    'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image', 'line',\r\n\t    'linearGradient', 'marker', 'mask', 'metadata', 'missingGlyph', 'mpath',\r\n\t    'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script',\r\n\t    'set', 'stop', 'style', 'switch', 'symbol', 'text', 'textPath', 'title',\r\n\t    'tref', 'tspan', 'use', 'view', 'vkern',\r\n\t];\r\n\tvar svg = createTagFunction('svg');\r\n\tSVG_TAG_NAMES.forEach(function (tag) {\r\n\t    svg[tag] = createTagFunction(tag);\r\n\t});\r\n\tvar TAG_NAMES = [\r\n\t    'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base',\r\n\t    'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption',\r\n\t    'cite', 'code', 'col', 'colgroup', 'dd', 'del', 'dfn', 'dir', 'div', 'dl',\r\n\t    'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form',\r\n\t    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n\t    'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend',\r\n\t    'li', 'link', 'main', 'map', 'mark', 'menu', 'meta', 'nav', 'noscript',\r\n\t    'object', 'ol', 'optgroup', 'option', 'p', 'param', 'pre', 'progress', 'q',\r\n\t    'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small',\r\n\t    'source', 'span', 'strong', 'style', 'sub', 'sup', 'table', 'tbody', 'td',\r\n\t    'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'u', 'ul', 'video',\r\n\t];\r\n\tvar tags = { \r\n\t\tSVG_TAG_NAMES: SVG_TAG_NAMES, \r\n\t\tTAG_NAMES: TAG_NAMES, \r\n\t\tsvg: svg, \r\n\t\tisSelector: isSelector, \r\n\t\tcreateTagFunction: createTagFunction \r\n\t};\r\n\tTAG_NAMES.forEach(function (n) {\r\n\t    tags[n] = createTagFunction(n);\r\n\t});\r\n\r\n\treturn  hyperscript.tags = tags;\r\n});\ndefine('skylark-tangular/main',[\r\n\t\"./h\",\r\n\t\"./tags\"\r\n],function(h){\r\n\treturn h;\r\n});\ndefine('skylark-tangular', ['skylark-tangular/main'], function (main) { return main; });\n\n"]}